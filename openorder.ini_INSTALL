; inifile for OpenOrder

[setup]
; To close a service, set service_http_error
; service status - values:
;service_http_error = HTTP/1.0 404 Not Found
;service_http_error = HTTP/1.1 410 Gone
;service_http_error = HTTP/1.0 503 Service Unavailable


; --------------
version = 2.7

; --------------
; set only_https to accept https call only
;only_https = 1

; --------------
; in_house_domain may use ?ShowInfo and use create_sample form
;in_house_domain = .dbc.dk

; set to TRUE to expose the create_sample form
;show_samples = 1
;show_samples_ip_list = 127.0.0.1


; --------------
; validate
;validate[soap_request] = soap.xsd
;validate[request] = openorder.xsd
;validate[ubf] = esgaroth_schemas/ubf.xsd
;validate[soap_response] = soap.xsd
;validate[response] = openorder.xsd

; --------------
; soapActions and their corresponding request structure
; Can be found in the wsdl but is stated here for convenience
soapAction[answer] = answerRequest
soapAction[checkArticleDelivery] = checkArticleDeliveryRequest
soapAction[checkElectronicDelivery] = checkElectronicDeliveryRequest
soapAction[checkOrderPolicy] = checkOrderPolicyRequest
soapAction[getTaskStatus] = getTaskStatusRequest
soapAction[placeOrder] = placeOrderRequest
soapAction[resend] = resendRequest
soapAction[shipped] = shippedRequest
soapAction[updateOrder] = updateOrderRequest
soapAction[incrementRedirectStat] = incrementRedirectStatRequest

; --------------
; prefixes and namespaces
default_namespace_prefix = oo
xmlns[oo] = http://oss.dbc.dk/ns/openorder

; --------------
; openagency
; url to openagency
openagency_url = http://openagency.someserver.dk/?action=pickupAgencyList&agencyId=%s
; how long do we accept to wait for answer
openagency_timeout = 20
; list of auth-groups which can act on behalf of other libraries
;openagency_override = 010100

; --------------
;Extend Service target
; z3950:
; es_target[some_id][protocol] = z3950
; set es_target[some_id][host] and es_target[some_id][authentication] to send as z3950 update
; http:
; es_target[some_id][protocol] = http
; set es_target[some_id][host] to send as request to henry
; The targets are used in the order they are listet and the result is taken from the first, results
; from one of the following targets are ignored
; Normally, only one target is specified, but for test and debug purposes, more can be used
; timeout (in seconds) can be set - default is 30 seconds
;
;es_target[some_z_target][protocol] = z3950
;es_target[some_z_target][host] = some_es_z3950_target
;es_target[some_z_target][authentication] =  user/group/password
;es_target[some_z_target][timeout] =  30
;es_target[some_http_target][protocol] = http
;es_target[some_http_target][host] = http://etwas.dbc.dk/henry
;es_target[some_http_target][timeout] =  30


; --------------
; order policy script
; This script hides the javascript execution.
; If there are more than one version running, the scriptname should contain
; the version as part of its name - like .../OrderPolicy_2.3.sh
order_policy_shell = /var/www/php_exec/OrderPolicy.sh

; path to temp-dir where writing/reading/deleting files are allowed
tmp_path = /tmp/

; --------------
; getTaskStatus regexp for orderId - if matched, requesterId is mandatory
unique_orderId_mask = 1.........

; --------------
; path to xml-examples
xmldir = ./xml

; --------------
; logfile for verbose output
logfile = /tmp/openorder.log

; --------------
; login for copydan table
copydan_credentials = ora_user/ora_passwd@some.server.dk

; --------------
; login to ors for getTaskStatus request
;ors_credentials = ora_user/ora_passwd@some.server.dk

; login for redirect_stat table
redirect_credentials = ora_user/ora_passwd@some.server.dk

; --------------
; set verboselevel
;   WARNING - simple warnings
;   ERROR   - errors in response
;   FATAL   - major errors
;   STAT    - Statístical logging
;   TIMER   - timer logging
;   TRACE   - program trace
;   DEBUG   - debugging info
;   Z3959   - calls to z3950 services
;   OCI     - oracle
verbose = WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG+Z3950+OCI

; format for automatic timer dump %s is the soap-action used
dump_timer = openorder(%s)

; --------------
; memcache - enabling this will cache some result for 'cache_expire' seconds
;cache_host = localhost
;cache_port = 11211
;cache_expire = 60

; ==============

[textmaps]
; mapping results to xsd enumeration
; notemap[lookupurl: ulr/nourl][orderPossible: true/false][Reason: string] = xsd:placeOrderErrorType
notemap[nourl][true][agency owns material] = owned_accepted
notemap[url][true][agency owns material] = owned_accepted
notemap[nourl][true][other agency owns material] = not_owned_ILL_loc
notemap[nourl][false][agency owns material] = owned_wrong_mediumType
notemap[nourl][false][other agency owns material] = not_owned_wrong_ILL_mediumType
notemap[nourl][false][no holdings] = not_owned_no_ILL_loc
notemap[url][false][agency owns material] = owned_own_catalogue
notemap[nourl][false][not owned accepted by consortia] = not_owned_accepted_by_consortia

; ==============

[aaa]
; aaa Authentication, Access control and Accounting
;
; Creates a authentication object from aaa_ip_rights, aaa_fors_rights or aaa_credentials - in that order
; 
; Rights can be set here for selected ip-addresses
; aaa_ip_rights[group-identifier][ip_list] = list of ip's
; aaa_ip_rights[group-identifier][ressource][<named ressource>] = right to <named ressource>
; aaa_ip_rights[group-identifier][ressource][<named ressource 2>] = right to <named ressource 2>
;
aaa_ip_rights[dbc][ip_list] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
aaa_ip_rights[dbc][ressource]['netpunkt.dk'] = 500
;
; if not found in aaa_ip_rights the authentication object is created from the FORS 
; either by using the WS specified by aaa_fors_rights or by OCI specified by aaa_credentials
;
; uri for a fors rights webservice - aaa_fors_rights have precedence over aaa_credentials
;aaa_fors_rights = http://forsrights.some.server/?action=forsRights&outputType=php&userIdAut=%s&groupIdAut=%s&passwordAut=%s&ipAddress=%s
;
; oci credentials for FORS server
;aaa_credentials = ora_user/ora_passwd@some.server.dk
;
; memcache server for the authentication object - use localhost in one-webserver environment
;aaa_cache_address = localhost:11211
; number of seconds to cache authentication and access rights info
;aaa_cache_seconds = 3600
;

; ==============

[rest]
; REST parameters for SOAPAction
;
; use xml.path.to.par notation to solve name-conflicts
; action[thisSoapAction][foo][] = some.number
; action[thisSoapAction][bar][] = another.number
; to build
; <thisSoapAction>
;   <foo>
;     <number>nn</number>
;   </foo>
;   <bar>
;     <number>mm</number>
;   </bar>
; </thisSoapAction>
; from url: action=thisSoapAction&some.number=nn&another.number=mm
;

action[answer][authentication][] = groupIdAut
action[answer][authentication][] = passwordAut
action[answer][authentication][] = userIdAut
action[answer][] = expectedDelivery
action[answer][] = latestProviderNote
action[answer][] = orderId
action[answer][] = providerAnswer
action[answer][] = providerAnswerDate
action[answer][] = providerAnswerReason
action[answer][] = providerOrderState
action[answer][] = requesterId
action[answer][] = responderId
action[answer][] = serviceRequester
action[answer][] = outputType
action[answer][] = callback

action[checkArticleDelivery][authentication][] = groupIdAut
action[checkArticleDelivery][authentication][] = passwordAut
action[checkArticleDelivery][authentication][] = userIdAut
action[checkArticleDelivery][] = pid
action[checkArticleDelivery][] = serviceRequester
action[checkArticleDelivery][] = outputType
action[checkArticleDelivery][] = callback

action[checkElectronicDelivery][authentication][] = groupIdAut
action[checkElectronicDelivery][authentication][] = passwordAut
action[checkElectronicDelivery][authentication][] = userIdAut
action[checkElectronicDelivery][] = issn
action[checkElectronicDelivery][] = serviceRequester
action[checkElectronicDelivery][] = outputType
action[checkElectronicDelivery][] = callback

action[checkOrderPolicy][authentication][] = groupIdAut
action[checkOrderPolicy][authentication][] = passwordAut
action[checkOrderPolicy][authentication][] = userIdAut
action[checkOrderPolicy][] = bibliographicRecordId
action[checkOrderPolicy][] = bibliographicRecordAgencyId
action[checkOrderPolicy][] = pickUpAgencyId
action[checkOrderPolicy][] = pid
action[checkOrderPolicy][] = serviceRequester
action[checkOrderPolicy][] = outputType
action[checkOrderPolicy][] = callback

action[getTaskStatus][authentication][] = groupIdAut
action[getTaskStatus][authentication][] = passwordAut
action[getTaskStatus][authentication][] = userIdAut
action[getTaskStatus][] = orderId
action[getTaskStatus][] = requesterId
action[getTaskStatus][] = outputType
action[getTaskStatus][] = callback

action[placeOrder][] = articleDirect
action[placeOrder][authentication][] = groupIdAut
action[placeOrder][authentication][] = passwordAut
action[placeOrder][authentication][] = userIdAut
action[placeOrder][] = author
action[placeOrder][] = authorOfComponent
action[placeOrder][] = bibliographicCategory
action[placeOrder][] = bibliographicRecordAgencyId
action[placeOrder][] = bibliographicRecordId
action[placeOrder][] = callNumber
action[placeOrder][] = copy
action[placeOrder][] = edition
action[placeOrder][] = exactEdition
action[placeOrder][] = fullTextLink
action[placeOrder][] = fullTextLinkType
action[placeOrder][] = isbn
action[placeOrder][] = issn
action[placeOrder][] = issue
action[placeOrder][] = itemId
action[placeOrder][] = language
action[placeOrder][] = localHoldingsId
action[placeOrder][] = mediumType
action[placeOrder][] = needBeforeDate
action[placeOrder][] = orderId
action[placeOrder][] = orderSystem
action[placeOrder][] = pagination
action[placeOrder][] = pickUpAgencyId
action[placeOrder][] = pickUpAgencySubdivision
action[placeOrder][] = pid
action[placeOrder][] = placeOfPublication
action[placeOrder][] = publicationDate
action[placeOrder][] = publicationDateOfComponent
action[placeOrder][] = publisher
action[placeOrder][] = requesterId
action[placeOrder][] = requesterNote
action[placeOrder][] = responderId
action[placeOrder][] = seriesTitelNumber
action[placeOrder][] = serviceRequester
action[placeOrder][] = title
action[placeOrder][] = titleOfComponent
action[placeOrder][] = userAddress
action[placeOrder][] = userAgencyId
action[placeOrder][] = userDateOfBirth
action[placeOrder][] = userId
action[placeOrder][] = userIdAuthenticated
action[placeOrder][] = userIdType
action[placeOrder][] = userMail
action[placeOrder][] = userName
action[placeOrder][] = userReferenceSource
action[placeOrder][] = userTelephone
action[placeOrder][] = verificationReferenceSource
action[placeOrder][] = volume
action[placeOrder][] = outputType
action[placeOrder][] = callback

action[resend][authentication][] = groupIdAut
action[resend][authentication][] = passwordAut
action[resend][authentication][] = userIdAut
action[resend][] = messageType
action[resend][] = orderId
action[resend][] = requesterId
action[resend][] = serviceRequester
action[resend][] = outputType
action[resend][] = callback

action[shipped][authentication][] = groupIdAut
action[shipped][authentication][] = passwordAut
action[shipped][authentication][] = userIdAut
action[shipped][] = creationDate
action[shipped][] = dateDue
action[shipped][] = itemId
action[shipped][] = orderId
action[shipped][] = requesterId
action[shipped][] = responderId
action[shipped][] = serviceRequester
action[shipped][] = shippedDate
action[shipped][] = shippedServiceType
action[shipped][] = outputType
action[shipped][] = callback

action[updateOrder][authentication][] = groupIdAut
action[updateOrder][authentication][] = passwordAut
action[updateOrder][authentication][] = userIdAut
action[updateOrder][] = orderId
action[updateOrder][] = requesterId
action[updateOrder][] = forwardOrderId
action[updateOrder][] = closed
action[updateOrder][] = providerOrderState
action[updateOrder][] = requesterOrderState
action[updateOrder][] = serviceRequester
action[updateOrder][] = outputType
action[updateOrder][] = callback

action[incrementRedirectStat][authentication][] = groupIdAut
action[incrementRedirectStat][authentication][] = passwordAut
action[incrementRedirectStat][authentication][] = userIdAut
action[incrementRedirectStat][] = AgencyId
action[incrementRedirectStat][] = outputType
action[incrementRedirectStat][] = callback



; ==============

[showinfo]
; section to dump setting online
; make one or more line to display if ?ShowInfo is part of the url
; __var__ will be replace by the corresponding ini-file setting - if it exists
; __var.section__ will be replace by the corresponding ini-file setting from section [section]
; this will only work if the user from in_house_domain - see above
;showinfo[] = <pre>
;showinfo[] = version:            __version.setup__
;showinfo[] = logfile:            __logfile.setup__
;showinfo[] = verbose:            __verbose__
;showinfo[] = agency:             __openagency_url__
;showinfo[] = order_policy_shell: __order_policy_shell__
;showinfo[] = copydan_credentials: __copydan_credentials__
;showinfo[] = redirect_credentials: __redirect_credentials__
;showinfo[] = aaa_fors_rights:   __aaa_fors_rights__
;showinfo[] = aaa_credentials:    __aaa_credentials__
;showinfo[] = es_target:          __es_target__
;showinfo[] = </pre>

; ==============

[howru]
;test[] = checkOrderPolicy&bibliographicRecordId=27670768&bibliographicRecordAgencyId=870970&pickUpAgencyId=716301&serviceRequester=150013
;preg_match[] = orderPossible
;error[] = ERROR checkOrderPolicy for 716301 and recordId 27670768

